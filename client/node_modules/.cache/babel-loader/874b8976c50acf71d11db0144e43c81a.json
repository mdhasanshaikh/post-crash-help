{"ast":null,"code":"var _jsxFileName = \"/Users/mdhasan/Desktop/md/post_crash_help/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport RecordList from \"./components/record-list\";\nimport AlertPopup from \"./components/alert-popup\";\nimport NotificationCenter from \"./components/notification-center/notification-center\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      accidents: [],\n      inputField: [{\n        id: 1,\n        name: \"Accident id\",\n        value: 0\n      }, {\n        id: 2,\n        name: \"Served\",\n        value: 0\n      }],\n      clickAccident: {}\n    };\n\n    this.getAllAccidents = _ => {\n      // const scope = this;\n      fetch(\"http://localhost:4000/accidents\").then(res => res.json()).then(res => this.setState({\n        accidents: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.getAllServedAccidents = () => {\n      let allAccidents = this.state.accidents;\n      allAccidents = allAccidents.filter(accident => accident.served === 1);\n      let servedAccidents = allAccidents.map(accident => {\n        let formatedAccident = {};\n        formatedAccident.id = accident.id;\n        formatedAccident.patientName = accident.name;\n        formatedAccident.date = accident.date;\n        formatedAccident.descript = [{\n          key: 0,\n          title: \"License no.\",\n          text: accident.license_no\n        }, {\n          key: 1,\n          title: \"Medical condition\",\n          text: accident.medical_cond\n        }, {\n          key: 2,\n          title: \"Location\",\n          text: accident.location\n        }];\n        return formatedAccident;\n      });\n      return servedAccidents;\n    };\n\n    this.getAllUnServedAccidents = () => {};\n\n    this.handleInputValueChange = env => {\n      let inputField = this.state.inputField;\n      inputField.map(field => {\n        if (field.name === env.target.name) {\n          field.value = env.target.value;\n        }\n\n        return field;\n      });\n      this.setState({\n        inputField\n      });\n    };\n\n    this.handleServedBtnClick = () => {\n      const inputField = this.state.inputField;\n      fetch(`http://localhost:4000/accidents/update?accident_id=\"${inputField[0].value}\"&status=${inputField[1].value}`).then(this.getAllAccidents).catch(err => console.log(err));\n    };\n\n    this.handleNotificationItemClick = () => {};\n  }\n\n  componentDidMount() {\n    this.getAllAccidents();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Post Crash Help\"), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"listTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"All accidents\"), React.createElement(RecordList, {\n      accidents: this.getAllServedAccidents(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(NotificationCenter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mdhasan/Desktop/md/post_crash_help/client/src/App.js"],"names":["React","Component","RecordList","AlertPopup","NotificationCenter","App","state","accidents","inputField","id","name","value","clickAccident","getAllAccidents","_","fetch","then","res","json","setState","data","catch","err","console","log","getAllServedAccidents","allAccidents","filter","accident","served","servedAccidents","map","formatedAccident","patientName","date","descript","key","title","text","license_no","medical_cond","location","getAllUnServedAccidents","handleInputValueChange","env","field","target","handleServedBtnClick","handleNotificationItemClick","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport RecordList from \"./components/record-list\";\nimport AlertPopup from \"./components/alert-popup\";\nimport NotificationCenter from \"./components/notification-center/notification-center\";\n\nclass App extends Component {\n  state = {\n    accidents: [],\n    inputField: [\n      { id: 1, name: \"Accident id\", value: 0 },\n      { id: 2, name: \"Served\", value: 0 }\n    ],\n    clickAccident: {\n      \n    }\n  };\n\n  componentDidMount() {\n    this.getAllAccidents();\n  }\n\n  getAllAccidents = _ => {\n    // const scope = this;\n\n    fetch(\"http://localhost:4000/accidents\")\n      .then(res => res.json())\n      .then(res => this.setState({ accidents: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  getAllServedAccidents = () => {\n    let allAccidents = this.state.accidents;\n\n    allAccidents = allAccidents.filter(accident => accident.served === 1);\n    let servedAccidents = allAccidents.map(accident => {\n      let formatedAccident = {};\n\n      formatedAccident.id = accident.id;\n      formatedAccident.patientName = accident.name;\n      formatedAccident.date = accident.date;\n\n      formatedAccident.descript = [\n        {\n          key: 0,\n          title: \"License no.\",\n          text: accident.license_no\n        },\n        {\n          key: 1,\n          title: \"Medical condition\",\n          text: accident.medical_cond\n        },\n        {\n          key: 2,\n          title: \"Location\",\n          text: accident.location\n        }\n      ];\n      return formatedAccident;\n    });\n\n    return servedAccidents;\n  };\n\n  getAllUnServedAccidents = () => {};\n\n  handleInputValueChange = env => {\n    let inputField = this.state.inputField;\n    inputField.map(field => {\n      if (field.name === env.target.name) {\n        field.value = env.target.value;\n      }\n      return field;\n    });\n\n    this.setState({\n      inputField\n    });\n  };\n\n  handleServedBtnClick = () => {\n    const inputField = this.state.inputField;\n    fetch(\n      `http://localhost:4000/accidents/update?accident_id=\"${inputField[0].value}\"&status=${inputField[1].value}`\n    )\n      .then(this.getAllAccidents)\n      .catch(err => console.log(err));\n  };\n\n  handleNotificationItemClick = () => {};\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav>Post Crash Help</nav>\n        <main>\n          <div className=\"listTitle\">All accidents</div>\n          <RecordList accidents={this.getAllServedAccidents()} />\n\n          {/* {this.state.inputField.map(field => (\n            <input\n              name={field.name}\n              value={field.value}\n              type=\"number\"\n              onChange={this.handleInputValueChange}\n            />\n          ))}\n          <button onClick={this.handleServedBtnClick}>Submit</button> */}\n        </main>\n        {/* <AlertPopup /> */}\n        <NotificationCenter />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}