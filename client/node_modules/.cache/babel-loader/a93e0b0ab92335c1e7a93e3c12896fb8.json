{"ast":null,"code":"var _jsxFileName = \"/Users/mdhasan/Desktop/md/post_crash_help/mongo_db/client/src/components/notification-center/notification-center.jsx\";\nimport React, { Component } from \"react\";\nimport \"./notification-center.css\";\nimport chevronUpIcon from \"../../assert/chevron-up-icon.png\";\nimport chevronDownIcon from \"../../assert/chevron-down-icon.png\";\nimport { connect } from \"react-redux\";\nimport { updateAccident } from \"../../actions/accidentActions\";\nimport PropTypes from \"prop-types\";\nimport * as Styled from \"./styles\";\n\nclass NotificationCenter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      noticicationCenterVisible: null,\n      firstClick: false\n    };\n\n    this.getNotificationCenterClasses = status => {\n      const firstClick = this.state.firstClick;\n\n      if (!firstClick) {\n        return \"notification-center\";\n      } else if (firstClick && !status) {\n        return \"notification-center-contract\";\n      } else if (firstClick && status) {\n        return \"notification-center-expand\";\n      }\n    };\n\n    this.handleNotificationCenterToggle = () => {\n      let firstClick = this.state.firstClick;\n\n      if (!firstClick) {\n        firstClick = true;\n      }\n\n      let noticicationCenterVisible = this.state.noticicationCenterVisible;\n      noticicationCenterVisible = !noticicationCenterVisible;\n      this.setState({\n        noticicationCenterVisible,\n        firstClick\n      });\n    };\n\n    this.handleServedBtnClick = async accidentId => {\n      await this.props.updateAccident(accidentId);\n    };\n\n    this.getNotificationCenterContent = () => {\n      const accidents = this.props.accidents;\n\n      if (accidents.length === 0) {\n        return null;\n      } else {\n        return /*#__PURE__*/React.createElement(Styled.ContentSection, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }\n        }, accidents.map(accident => /*#__PURE__*/React.createElement(Styled.Item, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Styled.TextSection, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Styled.TextSectionFirstRow, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }, accident.location), /*#__PURE__*/React.createElement(Styled.TextSectionSecondRow, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }\n        }, accident.patientName), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }\n        }, accident.vehicle_no)))))) // <React.Fragment>\n        //   {accidents.map(accident => (\n        //     <div key={accident.id} className=\"notification-item\">\n        //       <div\n        //         className=\"text-section\"\n        //         onClick={() => this.props.handleItemClick(accident)}>\n        //         <div className=\"top-section\">\n        //           <div>{accident.location}</div>\n        //           {/* <div>{accident.date}</div> */}\n        //         </div>\n        //         <div className=\"middle-section\">\n        //           <div>{accident.patientName}</div>\n        //           <div>{accident.vehicle_no}</div>\n        //         </div>\n        //       </div>\n        //       <div className=\"btn-section\">\n        //         <button onClick={() => this.handleServedBtnClick(accident.id)}>\n        //           Done\n        //         </button>\n        //       </div>\n        //     </div>\n        //   ))}\n        // </React.Fragment>\n        ;\n      }\n    };\n  }\n\n  render() {\n    const props = {\n      isOpen: this.state.noticicationCenterVisible\n    };\n    return /*#__PURE__*/React.createElement(Styled.NotificationCenterBox, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Styled.Topbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Styled.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Notification(\", this.props.accidents.length, \")\"), /*#__PURE__*/React.createElement(Styled.ButtonIcon, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }))), this.getNotificationCenterContent()) // <div\n    //   className={this.getNotificationCenterClasses(\n    //     this.state.noticicationCenterVisible\n    //   )}>\n    //   <div className=\"top-bar\" onClick={this.handleNotificationCenterToggle}>\n    //     <div className=\"title\">\n    //       Notification({this.props.accidents.length})\n    //     </div>\n    //     <button\n    //       className=\"openCloseBtn\"\n    //       onClick={this.handleNotificationCenterToggle}>\n    //       <img\n    //         src={\n    //           this.state.noticicationCenterVisible\n    //             ? chevronDownIcon\n    //             : chevronUpIcon\n    //         }\n    //         alt=\"\"\n    //       />\n    //     </button>\n    //   </div>\n    //   <div className=\"content-section\">\n    //     {this.getNotificationCenterContent()}\n    //   </div>\n    // </div>\n    ;\n  }\n\n}\n\nNotificationCenter.propTypes = {\n  updateAccident: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  updateAccident\n})(NotificationCenter);","map":{"version":3,"sources":["/Users/mdhasan/Desktop/md/post_crash_help/mongo_db/client/src/components/notification-center/notification-center.jsx"],"names":["React","Component","chevronUpIcon","chevronDownIcon","connect","updateAccident","PropTypes","Styled","NotificationCenter","state","noticicationCenterVisible","firstClick","getNotificationCenterClasses","status","handleNotificationCenterToggle","setState","handleServedBtnClick","accidentId","props","getNotificationCenterContent","accidents","length","map","accident","location","patientName","vehicle_no","render","isOpen","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./notification-center.css\";\n\nimport chevronUpIcon from \"../../assert/chevron-up-icon.png\";\nimport chevronDownIcon from \"../../assert/chevron-down-icon.png\";\n\nimport { connect } from \"react-redux\";\nimport { updateAccident } from \"../../actions/accidentActions\";\nimport PropTypes from \"prop-types\";\n\nimport * as Styled from \"./styles\";\n\nclass NotificationCenter extends Component {\n  state = {\n    noticicationCenterVisible: null,\n    firstClick: false\n  };\n\n  static propTypes = {\n    updateAccident: PropTypes.func.isRequired\n  };\n\n  getNotificationCenterClasses = status => {\n    const firstClick = this.state.firstClick;\n    if (!firstClick) {\n      return \"notification-center\";\n    } else if (firstClick && !status) {\n      return \"notification-center-contract\";\n    } else if (firstClick && status) {\n      return \"notification-center-expand\";\n    }\n  };\n\n  handleNotificationCenterToggle = () => {\n    let firstClick = this.state.firstClick;\n    if (!firstClick) {\n      firstClick = true;\n    }\n\n    let noticicationCenterVisible = this.state.noticicationCenterVisible;\n    noticicationCenterVisible = !noticicationCenterVisible;\n\n    this.setState({ noticicationCenterVisible, firstClick });\n  };\n\n  handleServedBtnClick = async accidentId => {\n    await this.props.updateAccident(accidentId);\n  };\n\n  getNotificationCenterContent = () => {\n    const accidents = this.props.accidents;\n\n    if (accidents.length === 0) {\n      return null;\n    } else {\n      return (\n        <Styled.ContentSection>\n          {accidents.map(accident => (\n            <Styled.Item>\n              <Styled.TextSection>\n                <Styled.TextSectionFirstRow>\n                  {accident.location}\n                </Styled.TextSectionFirstRow>\n                <Styled.TextSectionSecondRow>\n                  <div>{accident.patientName}</div>\n                  <div>{accident.vehicle_no}</div>\n                </Styled.TextSectionSecondRow>\n              </Styled.TextSection>\n            </Styled.Item>\n          ))}\n        </Styled.ContentSection>\n        // <React.Fragment>\n        //   {accidents.map(accident => (\n        //     <div key={accident.id} className=\"notification-item\">\n        //       <div\n        //         className=\"text-section\"\n        //         onClick={() => this.props.handleItemClick(accident)}>\n        //         <div className=\"top-section\">\n        //           <div>{accident.location}</div>\n        //           {/* <div>{accident.date}</div> */}\n        //         </div>\n        //         <div className=\"middle-section\">\n        //           <div>{accident.patientName}</div>\n        //           <div>{accident.vehicle_no}</div>\n        //         </div>\n        //       </div>\n        //       <div className=\"btn-section\">\n        //         <button onClick={() => this.handleServedBtnClick(accident.id)}>\n        //           Done\n        //         </button>\n        //       </div>\n        //     </div>\n        //   ))}\n        // </React.Fragment>\n      );\n    }\n  };\n\n  render() {\n    const props = {\n      isOpen: this.state.noticicationCenterVisible\n    };\n\n    return (\n      <Styled.NotificationCenterBox {...props}>\n        <Styled.Topbar>\n          <Styled.Title>\n            Notification({this.props.accidents.length})\n          </Styled.Title>\n          <Styled.ButtonIcon {...props} />\n        </Styled.Topbar>\n        {this.getNotificationCenterContent()}\n      </Styled.NotificationCenterBox>\n      // <div\n      //   className={this.getNotificationCenterClasses(\n      //     this.state.noticicationCenterVisible\n      //   )}>\n      //   <div className=\"top-bar\" onClick={this.handleNotificationCenterToggle}>\n      //     <div className=\"title\">\n      //       Notification({this.props.accidents.length})\n      //     </div>\n      //     <button\n      //       className=\"openCloseBtn\"\n      //       onClick={this.handleNotificationCenterToggle}>\n      //       <img\n      //         src={\n      //           this.state.noticicationCenterVisible\n      //             ? chevronDownIcon\n      //             : chevronUpIcon\n      //         }\n      //         alt=\"\"\n      //       />\n      //     </button>\n      //   </div>\n      //   <div className=\"content-section\">\n      //     {this.getNotificationCenterContent()}\n      //   </div>\n      // </div>\n    );\n  }\n}\n\nexport default connect(null, { updateAccident })(NotificationCenter);\n"]},"metadata":{},"sourceType":"module"}