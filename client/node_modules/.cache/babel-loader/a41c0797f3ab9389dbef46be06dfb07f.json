{"ast":null,"code":"var _jsxFileName = \"/Users/mdhasan/Desktop/md/post_crash_help/mongo_db/client/src/components/notification-center/notification-center.jsx\";\nimport React, { Component } from \"react\";\nimport \"./notification-center.css\";\nimport chevronUpIcon from \"../../assert/chevron-up-icon.png\";\nimport chevronDownIcon from \"../../assert/chevron-down-icon.png\";\nimport { connect } from \"react-redux\";\nimport { updateAccident } from \"../../actions/accidentActions\";\nimport PropTypes from \"prop-types\";\n\nclass NotificationCenter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      noticicationCenterVisible: false,\n      firstClick: false\n    };\n\n    this.getNotificationCenterClasses = status => {\n      const firstClick = this.state.firstClick;\n\n      if (!firstClick) {\n        return \"notification-center\";\n      } else if (firstClick && !status) {\n        return \"notification-center-contract\";\n      } else if (firstClick && status) {\n        return \"notification-center-expand\";\n      }\n    };\n\n    this.handleNotificationCenterToggle = () => {\n      let firstClick = this.state.firstClick;\n\n      if (!firstClick) {\n        firstClick = true;\n      }\n\n      let noticicationCenterVisible = this.state.noticicationCenterVisible;\n      noticicationCenterVisible = !noticicationCenterVisible;\n      this.setState({\n        noticicationCenterVisible,\n        firstClick\n      });\n    };\n\n    this.handleServedBtnClick = async accident => {\n      await this.props.updateAccident(accident.id);\n      this.props.handleItemClick(accident);\n    };\n\n    this.getNotificationCenterContent = () => {\n      const accidents = this.props.accidents;\n\n      if (accidents.length === 0) {\n        return null;\n      } else {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, accidents.map(accident => React.createElement(\"div\", {\n          key: accident.id,\n          className: \"notification-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"text-section\",\n          onClick: () => this.props.handleNotificationItemClick(accident),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"top-section\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, accident.location)), React.createElement(\"div\", {\n          className: \"middle-section\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, accident.patientName), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, accident.vehicle_no))), React.createElement(\"div\", {\n          className: \"btn-section\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => this.handleServedBtnClick(accident),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Done\")))));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.getNotificationCenterClasses(this.state.noticicationCenterVisible),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top-bar\",\n      onClick: this.handleNotificationCenterToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Notification(\", this.props.accidents.length, \")\"), React.createElement(\"button\", {\n      className: \"openCloseBtn\",\n      onClick: this.handleNotificationCenterToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.noticicationCenterVisible ? chevronDownIcon : chevronUpIcon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"content-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.getNotificationCenterContent()));\n  }\n\n}\n\nNotificationCenter.propTypes = {\n  updateAccident: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  updateAccident\n})(NotificationCenter);","map":{"version":3,"sources":["/Users/mdhasan/Desktop/md/post_crash_help/mongo_db/client/src/components/notification-center/notification-center.jsx"],"names":["React","Component","chevronUpIcon","chevronDownIcon","connect","updateAccident","PropTypes","NotificationCenter","state","noticicationCenterVisible","firstClick","getNotificationCenterClasses","status","handleNotificationCenterToggle","setState","handleServedBtnClick","accident","props","id","handleItemClick","getNotificationCenterContent","accidents","length","map","handleNotificationItemClick","location","patientName","vehicle_no","render","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./notification-center.css\";\n\nimport chevronUpIcon from \"../../assert/chevron-up-icon.png\";\nimport chevronDownIcon from \"../../assert/chevron-down-icon.png\";\n\nimport { connect } from \"react-redux\";\nimport { updateAccident } from \"../../actions/accidentActions\";\nimport PropTypes from \"prop-types\";\n\nclass NotificationCenter extends Component {\n  state = {\n    noticicationCenterVisible: false,\n    firstClick: false\n  };\n\n  static propTypes = {\n    updateAccident: PropTypes.func.isRequired\n  };\n\n  getNotificationCenterClasses = status => {\n    const firstClick = this.state.firstClick;\n    if (!firstClick) {\n      return \"notification-center\";\n    } else if (firstClick && !status) {\n      return \"notification-center-contract\";\n    } else if (firstClick && status) {\n      return \"notification-center-expand\";\n    }\n  };\n\n  handleNotificationCenterToggle = () => {\n    let firstClick = this.state.firstClick;\n    if (!firstClick) {\n      firstClick = true;\n    }\n\n    let noticicationCenterVisible = this.state.noticicationCenterVisible;\n    noticicationCenterVisible = !noticicationCenterVisible;\n\n    this.setState({ noticicationCenterVisible, firstClick });\n  };\n\n  handleServedBtnClick = async accident => {\n    await this.props.updateAccident(accident.id);\n\n    this.props.handleItemClick(accident);\n  };\n\n  getNotificationCenterContent = () => {\n    const accidents = this.props.accidents;\n    if (accidents.length === 0) {\n      return null;\n    } else {\n      return (\n        <React.Fragment>\n          {accidents.map(accident => (\n            <div key={accident.id} className=\"notification-item\">\n              <div\n                className=\"text-section\"\n                onClick={() =>\n                  this.props.handleNotificationItemClick(accident)\n                }>\n                <div className=\"top-section\">\n                  <div>{accident.location}</div>\n                  {/* <div>{accident.date}</div> */}\n                </div>\n                <div className=\"middle-section\">\n                  <div>{accident.patientName}</div>\n                  <div>{accident.vehicle_no}</div>\n                </div>\n              </div>\n              <div className=\"btn-section\">\n                <button onClick={() => this.handleServedBtnClick(accident)}>\n                  Done\n                </button>\n              </div>\n            </div>\n          ))}\n        </React.Fragment>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getNotificationCenterClasses(\n          this.state.noticicationCenterVisible\n        )}>\n        <div className=\"top-bar\" onClick={this.handleNotificationCenterToggle}>\n          <div className=\"title\">\n            Notification({this.props.accidents.length})\n          </div>\n          <button\n            className=\"openCloseBtn\"\n            onClick={this.handleNotificationCenterToggle}>\n            <img\n              src={\n                this.state.noticicationCenterVisible\n                  ? chevronDownIcon\n                  : chevronUpIcon\n              }\n              alt=\"\"\n            />\n          </button>\n        </div>\n        <div className=\"content-section\">\n          {this.getNotificationCenterContent()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { updateAccident })(NotificationCenter);\n"]},"metadata":{},"sourceType":"module"}