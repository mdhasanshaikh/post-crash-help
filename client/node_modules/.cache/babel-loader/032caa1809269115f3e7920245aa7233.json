{"ast":null,"code":"import { GET_ACCIDENTS, UPDATE_ACCIDENT, UPDATE_ERROR, ACCIDENTS_LOADING } from \"../actions/types\";\nconst initialState = {\n  accidents: [],\n  loading: false,\n  error: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ACCIDENTS:\n      return { ...state,\n        accidents: action.payload,\n        loading: false\n      };\n\n    case UPDATE_ACCIDENT:\n      let accidents = state.accidents.map(accident => {\n        if (accident._id === action.payload) {\n          accident.serve = true;\n        }\n\n        return accident;\n      });\n      return { ...state,\n        accidents: accidents\n      };\n\n    case UPDATE_ERROR:\n      return { ...state,\n        loading: false,\n        error: true\n      };\n\n    case ACCIDENTS_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mdhasan/Desktop/md/post_crash_help/mongo_db/client/src/reducers/accidentReducer.js"],"names":["GET_ACCIDENTS","UPDATE_ACCIDENT","UPDATE_ERROR","ACCIDENTS_LOADING","initialState","accidents","loading","error","state","action","type","payload","map","accident","_id","serve"],"mappings":"AAAA,SACEA,aADF,EAEEC,eAFF,EAGEC,YAHF,EAIEC,iBAJF,QAKO,kBALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,aAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,SAAS,EAAEI,MAAM,CAACE,OAFb;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKL,eAAL;AACE,UAAII,SAAS,GAAGG,KAAK,CAACH,SAAN,CAAgBO,GAAhB,CAAoBC,QAAQ,IAAI;AAC9C,YAAIA,QAAQ,CAACC,GAAT,KAAiBL,MAAM,CAACE,OAA5B,EAAqC;AACnCE,UAAAA,QAAQ,CAACE,KAAT,GAAiB,IAAjB;AACD;;AACD,eAAOF,QAAP;AACD,OALe,CAAhB;AAMA,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,SAAS,EAAEA;AAFN,OAAP;;AAKF,SAAKH,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAMF,SAAKJ,iBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOE,KAAP;AAlCJ;AAoCD","sourcesContent":["import {\n  GET_ACCIDENTS,\n  UPDATE_ACCIDENT,\n  UPDATE_ERROR,\n  ACCIDENTS_LOADING\n} from \"../actions/types\";\n\nconst initialState = {\n  accidents: [],\n  loading: false,\n  error: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ACCIDENTS:\n      return {\n        ...state,\n        accidents: action.payload,\n        loading: false\n      };\n\n    case UPDATE_ACCIDENT:\n      let accidents = state.accidents.map(accident => {\n        if (accident._id === action.payload) {\n          accident.serve = true;\n        }\n        return accident;\n      });\n      return {\n        ...state,\n        accidents: accidents\n      };\n\n    case UPDATE_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: true\n      };\n\n    case ACCIDENTS_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}